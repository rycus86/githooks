#!/bin/sh
if ! python --version 2>/dev/null; then
    echo "_ Skipping automatic inline content update: Python is not available"
    exit 0
fi

# shellcheck disable=SC1117
cat <<EOF | python -
import re

TEMPLATE_PATTERN="(.+#BASE_TEMPLATE_CONTENT_S)(.*)(#BASE_TEMPLATE_CONTENT_E.+)"
CLI_TOOL_PATTERN="(.+#CLI_TOOL_CONTENT_S)(.*)(#CLI_TOOL_CONTENT_E.+)"
README_PATTERN="(.+#INCLUDED_README_CONTENT_S)(.*)(#INCLUDED_README_CONTENT_E.+)"

if __name__ == '__main__':
    with open('base-template.sh', 'r') as template_file:
        template_contents = template_file.read()
    
    with open('cli.sh', 'r') as cli_tool_file:
        cli_tool_contents = cli_tool_file.read()
    
    with open('.githooks/README.md', 'r') as readme_file:
        readme_contents = readme_file.read()

    contents = ''

    with open('install.sh', 'r') as source:
        contents = source.read()

    match = re.match(TEMPLATE_PATTERN, contents, flags=re.MULTILINE | re.DOTALL)
    before, template, after = match.groups()

    contents = "%s\nread -r -d '' %s <<'EOF'\n%s\nEOF\n%s" % (
        before, "BASE_TEMPLATE_CONTENT", template_contents, after
    )

    match = re.match(CLI_TOOL_PATTERN, contents, flags=re.MULTILINE | re.DOTALL)
    before, template, after = match.groups()

    contents = "%s\nread -r -d '' %s << 'EOF'\n%s\nEOF\n%s" % (
        before, "CLI_TOOL_CONTENT", cli_tool_contents, after
    )

    match = re.match(README_PATTERN, contents, flags=re.MULTILINE | re.DOTALL)
    before, template, after = match.groups()

    contents = "%s\nread -r -d '' %s << 'EOF'\n%s\nEOF\n%s" % (
        before, "INCLUDED_README_CONTENT", readme_contents, after
    )
    
    with open('install.sh', 'w') as target:
        target.write(contents)
EOF

# shellcheck disable=SC2181
if [ $? -eq 0 ]; then
    echo "* Inline content is updated in the install script"
fi
